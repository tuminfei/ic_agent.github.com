var search_data = {"index":{"searchIndex":["icagent","accountidentifier","agent","agenterror","ast","assembler","nodes","basetype","basetypechild","basetypecontent","basetypefunc","basetypekey","basetypeopt","basetypeother","basetyperecord","basetypesingle","basetypevariant","basetypevec","comment","didfile","icbasetype","icbasetypechild","icbasetypecontent","icbasetypefunc","icbasetypekey","icbasetypeopt","icbasetypeother","icbasetyperecord","icbasetypesingle","icbasetypevalue","icbasetypevariant","icbasetypevec","icserviceitem","icservicemethodname","icservicemethodparams","icservicemethodquery","icservicemethodreturn","icservicemethods","icservicename","icserviceparam","ictypedef","ictypename","instruction","namednode","service","statementblock","statementcontent","statementnode","stringliteral","typedeclaration","typename","parser","statementparser","writer","baseexception","candid","basetype","basetypes","boolclass","constructtype","emptyclass","fixedintclass","fixednatclass","floatclass","funcclass","intclass","natclass","nullclass","optclass","pipe","primitivetype","principalclass","recclass","recordclass","reservedclass","serviceclass","textclass","tupleclass","typeids","typetable","variantclass","vecclass","canister","certificate","client","common","cycleswallet","governance","ledger","management","delegateidentity","error","identity","nodeid","principal","principalsort","request","syetemstate","typeerror","utils","valueerror","_build_type_table_impl()","_build_type_table_impl()","_build_type_table_impl()","_build_type_table_impl()","_build_type_table_impl()","_build_type_table_impl()","_build_type_table_impl()","_build_type_table_impl()","_build_type_table_impl()","_encode_annotation()","add()","add_child()","anonymous()","buffer()","build_blob()","build_opt()","build_record()","build_single_type()","build_type()","build_type()","build_type_table()","build_variant()","build_vec()","call()","call_endpoint()","canister_controllers()","canister_module_hash()","check_delegation()","check_type()","check_type()","check_type()","clean_tree()","clean_tree()","compare_to()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","covariant()","decode()","decode_blob()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","decode_value()","delegation()","display()","display()","display()","display()","display()","display()","display()","display()","elements_to_s()","elements_to_s()","encode()","encode()","encode_list()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_type()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","encode_value()","end?()","extract_der()","fill()","from_hex()","from_json()","from_seed()","from_str()","func()","gen_source_tree()","generate()","get_child_code()","get_expiry_date()","get_opt_code()","get_params_refer_values()","get_principal()","get_record_content()","get_record_key_value()","get_type()","get_type()","get_variant_content()","gt_eq()","has()","ic_service()","ic_service_methods()","ic_statement_childs()","ic_statement_root()","ic_type_by_name()","ic_type_name()","ic_type_names()","ic_types()","ic_types_obj()","id()","id()","id()","id()","id()","id()","id()","id()","id()","id()","id()","id()","id()","id()","id()","id()","id()","id()","idl_hash()","index_of()","inspect()","inspect()","label_hash()","leb128_string_hex()","leb128i_decode()","leb128u_decode()","length()","lookup()","lt_eq()","management_canister()","merge()","method_missing()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","opt()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","opt_code()","parse()","parse()","poll()","principal_is_within_ranges()","query()","query_endpoint()","query_raw()","read()","read_state()","read_state_endpoint()","read_state_raw()","read_type_table()","readbyte()","rec()","record()","recover_type()","replace_last_occurrence()","replace_multi_type()","request_status_raw()","safe_read()","safe_read_byte()","self_authenticating()","sender()","sender()","service()","sign()","sign()","sign_request()","signature()","source_content()","source_content()","status()","subnet_canister_ranges()","subnet_public_key()","time()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","title()","to_account_id()","to_array()","to_array()","to_array()","to_obj()","to_obj()","to_pem()","to_request_id()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_str()","to_str()","tree()","try_as_tuple()","tuple()","type_child_item_keys()","type_child_items()","type_param_content()","type_param_name()","type_refer_items()","type_root_opt_code()","unicode_to_hex()","update_raw()","value()","variant()","vec()","verify()","verify()","write()","code_of_conduct","dockerfile","gemfile","gemfile.lock","license","readme","rakefile","setup","did_grammar.treetop","did_grammar_v1.treetop","did_grammar_v2.treetop","nested_type_grammar.treetop","record_parser.treetop","variant_parser.treetop","ic_agent.rbs"],"longSearchIndex":["icagent","icagent::accountidentifier","icagent::agent","icagent::agenterror","icagent::ast","icagent::ast::assembler","icagent::ast::nodes","icagent::ast::nodes::basetype","icagent::ast::nodes::basetypechild","icagent::ast::nodes::basetypecontent","icagent::ast::nodes::basetypefunc","icagent::ast::nodes::basetypekey","icagent::ast::nodes::basetypeopt","icagent::ast::nodes::basetypeother","icagent::ast::nodes::basetyperecord","icagent::ast::nodes::basetypesingle","icagent::ast::nodes::basetypevariant","icagent::ast::nodes::basetypevec","icagent::ast::nodes::comment","icagent::ast::nodes::didfile","icagent::ast::nodes::icbasetype","icagent::ast::nodes::icbasetypechild","icagent::ast::nodes::icbasetypecontent","icagent::ast::nodes::icbasetypefunc","icagent::ast::nodes::icbasetypekey","icagent::ast::nodes::icbasetypeopt","icagent::ast::nodes::icbasetypeother","icagent::ast::nodes::icbasetyperecord","icagent::ast::nodes::icbasetypesingle","icagent::ast::nodes::icbasetypevalue","icagent::ast::nodes::icbasetypevariant","icagent::ast::nodes::icbasetypevec","icagent::ast::nodes::icserviceitem","icagent::ast::nodes::icservicemethodname","icagent::ast::nodes::icservicemethodparams","icagent::ast::nodes::icservicemethodquery","icagent::ast::nodes::icservicemethodreturn","icagent::ast::nodes::icservicemethods","icagent::ast::nodes::icservicename","icagent::ast::nodes::icserviceparam","icagent::ast::nodes::ictypedef","icagent::ast::nodes::ictypename","icagent::ast::nodes::instruction","icagent::ast::nodes::namednode","icagent::ast::nodes::service","icagent::ast::nodes::statementblock","icagent::ast::nodes::statementcontent","icagent::ast::nodes::statementnode","icagent::ast::nodes::stringliteral","icagent::ast::nodes::typedeclaration","icagent::ast::nodes::typename","icagent::ast::parser","icagent::ast::statementparser","icagent::ast::writer","icagent::baseexception","icagent::candid","icagent::candid::basetype","icagent::candid::basetypes","icagent::candid::boolclass","icagent::candid::constructtype","icagent::candid::emptyclass","icagent::candid::fixedintclass","icagent::candid::fixednatclass","icagent::candid::floatclass","icagent::candid::funcclass","icagent::candid::intclass","icagent::candid::natclass","icagent::candid::nullclass","icagent::candid::optclass","icagent::candid::pipe","icagent::candid::primitivetype","icagent::candid::principalclass","icagent::candid::recclass","icagent::candid::recordclass","icagent::candid::reservedclass","icagent::candid::serviceclass","icagent::candid::textclass","icagent::candid::tupleclass","icagent::candid::typeids","icagent::candid::typetable","icagent::candid::variantclass","icagent::candid::vecclass","icagent::canister","icagent::certificate","icagent::client","icagent::common","icagent::common::cycleswallet","icagent::common::governance","icagent::common::ledger","icagent::common::management","icagent::delegateidentity","icagent::error","icagent::identity","icagent::nodeid","icagent::principal","icagent::principalsort","icagent::request","icagent::syetemstate","icagent::typeerror","icagent::utils","icagent::valueerror","icagent::candid::basetype::_build_type_table_impl()","icagent::candid::funcclass#_build_type_table_impl()","icagent::candid::optclass#_build_type_table_impl()","icagent::candid::primitivetype#_build_type_table_impl()","icagent::candid::recclass#_build_type_table_impl()","icagent::candid::recordclass#_build_type_table_impl()","icagent::candid::serviceclass#_build_type_table_impl()","icagent::candid::variantclass#_build_type_table_impl()","icagent::candid::vecclass#_build_type_table_impl()","icagent::candid::funcclass#_encode_annotation()","icagent::candid::typetable#add()","icagent::ast::nodes::statementnode#add_child()","icagent::principal::anonymous()","icagent::candid::pipe#buffer()","icagent::ast::assembler::build_blob()","icagent::ast::assembler::build_opt()","icagent::ast::assembler::build_record()","icagent::ast::assembler::build_single_type()","icagent::ast::assembler::build_type()","icagent::candid::build_type()","icagent::candid::basetype#build_type_table()","icagent::ast::assembler::build_variant()","icagent::ast::assembler::build_vec()","icagent::client#call()","icagent::agent#call_endpoint()","icagent::syetemstate::canister_controllers()","icagent::syetemstate::canister_module_hash()","icagent::agent#check_delegation()","icagent::candid::basetype::check_type()","icagent::candid::constructtype#check_type()","icagent::candid::primitivetype#check_type()","icagent::ast::parser#clean_tree()","icagent::ast::statementparser#clean_tree()","icagent::principal#compare_to()","icagent::candid::basetype::covariant()","icagent::candid::boolclass#covariant()","icagent::candid::emptyclass#covariant()","icagent::candid::fixedintclass#covariant()","icagent::candid::fixednatclass#covariant()","icagent::candid::floatclass#covariant()","icagent::candid::funcclass#covariant()","icagent::candid::intclass#covariant()","icagent::candid::natclass#covariant()","icagent::candid::nullclass#covariant()","icagent::candid::optclass#covariant()","icagent::candid::principalclass#covariant()","icagent::candid::recclass#covariant()","icagent::candid::recordclass#covariant()","icagent::candid::reservedclass#covariant()","icagent::candid::serviceclass#covariant()","icagent::candid::textclass#covariant()","icagent::candid::tupleclass#covariant()","icagent::candid::variantclass#covariant()","icagent::candid::vecclass#covariant()","icagent::candid::decode()","icagent::utils::decode_blob()","icagent::candid::basetype::decode_value()","icagent::candid::boolclass#decode_value()","icagent::candid::emptyclass#decode_value()","icagent::candid::fixedintclass#decode_value()","icagent::candid::fixednatclass#decode_value()","icagent::candid::floatclass#decode_value()","icagent::candid::funcclass#decode_value()","icagent::candid::intclass#decode_value()","icagent::candid::natclass#decode_value()","icagent::candid::nullclass#decode_value()","icagent::candid::optclass#decode_value()","icagent::candid::principalclass#decode_value()","icagent::candid::recclass#decode_value()","icagent::candid::recordclass#decode_value()","icagent::candid::reservedclass#decode_value()","icagent::candid::serviceclass#decode_value()","icagent::candid::textclass#decode_value()","icagent::candid::tupleclass#decode_value()","icagent::candid::variantclass#decode_value()","icagent::candid::vecclass#decode_value()","icagent::certificate::delegation()","icagent::candid::basetype#display()","icagent::candid::funcclass#display()","icagent::candid::optclass#display()","icagent::candid::recclass#display()","icagent::candid::recordclass#display()","icagent::candid::tupleclass#display()","icagent::candid::variantclass#display()","icagent::candid::vecclass#display()","icagent::ast::nodes::namednode#elements_to_s()","icagent::ast::nodes::statementnode#elements_to_s()","icagent::candid::encode()","icagent::candid::typetable#encode()","icagent::utils::encode_list()","icagent::candid::basetype::encode_type()","icagent::candid::boolclass#encode_type()","icagent::candid::constructtype#encode_type()","icagent::candid::emptyclass#encode_type()","icagent::candid::fixedintclass#encode_type()","icagent::candid::fixednatclass#encode_type()","icagent::candid::floatclass#encode_type()","icagent::candid::intclass#encode_type()","icagent::candid::natclass#encode_type()","icagent::candid::nullclass#encode_type()","icagent::candid::principalclass#encode_type()","icagent::candid::recclass#encode_type()","icagent::candid::reservedclass#encode_type()","icagent::candid::textclass#encode_type()","icagent::candid::basetype::encode_value()","icagent::candid::boolclass#encode_value()","icagent::candid::emptyclass#encode_value()","icagent::candid::fixedintclass#encode_value()","icagent::candid::fixednatclass#encode_value()","icagent::candid::floatclass#encode_value()","icagent::candid::funcclass#encode_value()","icagent::candid::intclass#encode_value()","icagent::candid::natclass#encode_value()","icagent::candid::nullclass#encode_value()","icagent::candid::optclass#encode_value()","icagent::candid::principalclass#encode_value()","icagent::candid::recclass#encode_value()","icagent::candid::recordclass#encode_value()","icagent::candid::reservedclass#encode_value()","icagent::candid::serviceclass#encode_value()","icagent::candid::textclass#encode_value()","icagent::candid::tupleclass#encode_value()","icagent::candid::variantclass#encode_value()","icagent::candid::vecclass#encode_value()","icagent::candid::pipe#end?()","icagent::agent#extract_der()","icagent::candid::recclass#fill()","icagent::principal::from_hex()","icagent::delegateidentity::from_json()","icagent::identity::from_seed()","icagent::principal::from_str()","icagent::candid::basetypes::func()","icagent::ast::statementparser#gen_source_tree()","icagent::accountidentifier::generate()","icagent::ast::assembler::get_child_code()","icagent::agent#get_expiry_date()","icagent::ast::assembler::get_opt_code()","icagent::ast::assembler::get_params_refer_values()","icagent::agent#get_principal()","icagent::ast::assembler::get_record_content()","icagent::ast::assembler::get_record_key_value()","icagent::candid::get_type()","icagent::candid::recclass#get_type()","icagent::ast::assembler::get_variant_content()","icagent::principal#gt_eq()","icagent::candid::typetable#has()","icagent::ast::parser#ic_service()","icagent::ast::parser#ic_service_methods()","icagent::ast::statementparser#ic_statement_childs()","icagent::ast::statementparser#ic_statement_root()","icagent::ast::parser#ic_type_by_name()","icagent::ast::parser#ic_type_name()","icagent::ast::parser#ic_type_names()","icagent::ast::parser#ic_types()","icagent::ast::parser#ic_types_obj()","icagent::candid::boolclass#id()","icagent::candid::emptyclass#id()","icagent::candid::fixedintclass#id()","icagent::candid::fixednatclass#id()","icagent::candid::floatclass#id()","icagent::candid::funcclass#id()","icagent::candid::intclass#id()","icagent::candid::natclass#id()","icagent::candid::nullclass#id()","icagent::candid::optclass#id()","icagent::candid::principalclass#id()","icagent::candid::recordclass#id()","icagent::candid::reservedclass#id()","icagent::candid::serviceclass#id()","icagent::candid::textclass#id()","icagent::candid::tupleclass#id()","icagent::candid::variantclass#id()","icagent::candid::vecclass#id()","icagent::utils::idl_hash()","icagent::candid::typetable#index_of()","icagent::delegateidentity#inspect()","icagent::identity#inspect()","icagent::utils::label_hash()","icagent::candid::leb128_string_hex()","icagent::candid::leb128i_decode()","icagent::candid::leb128u_decode()","icagent::candid::pipe#length()","icagent::certificate::lookup()","icagent::principal#lt_eq()","icagent::principal::management_canister()","icagent::candid::typetable#merge()","icagent::candid::basetypes::method_missing()","icagent::candid::boolclass#name()","icagent::candid::emptyclass#name()","icagent::candid::fixedintclass#name()","icagent::candid::fixednatclass#name()","icagent::candid::floatclass#name()","icagent::candid::funcclass#name()","icagent::candid::intclass#name()","icagent::candid::natclass#name()","icagent::candid::nullclass#name()","icagent::candid::optclass#name()","icagent::candid::principalclass#name()","icagent::candid::recclass#name()","icagent::candid::recordclass#name()","icagent::candid::reservedclass#name()","icagent::candid::serviceclass#name()","icagent::candid::textclass#name()","icagent::candid::variantclass#name()","icagent::candid::vecclass#name()","icagent::accountidentifier::new()","icagent::agent::new()","icagent::ast::parser::new()","icagent::ast::statementparser::new()","icagent::ast::writer::new()","icagent::candid::boolclass::new()","icagent::candid::constructtype::new()","icagent::candid::emptyclass::new()","icagent::candid::fixedintclass::new()","icagent::candid::fixednatclass::new()","icagent::candid::floatclass::new()","icagent::candid::funcclass::new()","icagent::candid::intclass::new()","icagent::candid::natclass::new()","icagent::candid::nullclass::new()","icagent::candid::optclass::new()","icagent::candid::pipe::new()","icagent::candid::primitivetype::new()","icagent::candid::principalclass::new()","icagent::candid::recclass::new()","icagent::candid::recordclass::new()","icagent::candid::reservedclass::new()","icagent::candid::serviceclass::new()","icagent::candid::textclass::new()","icagent::candid::tupleclass::new()","icagent::candid::typetable::new()","icagent::candid::variantclass::new()","icagent::candid::vecclass::new()","icagent::canister::new()","icagent::client::new()","icagent::common::cycleswallet::new()","icagent::common::governance::new()","icagent::common::ledger::new()","icagent::common::management::new()","icagent::delegateidentity::new()","icagent::identity::new()","icagent::principal::new()","icagent::candid::basetypes::opt()","icagent::ast::nodes::basetypefunc#opt_code()","icagent::ast::nodes::basetypeopt#opt_code()","icagent::ast::nodes::basetypeother#opt_code()","icagent::ast::nodes::basetyperecord#opt_code()","icagent::ast::nodes::basetypesingle#opt_code()","icagent::ast::nodes::basetypevariant#opt_code()","icagent::ast::nodes::basetypevec#opt_code()","icagent::ast::nodes::icbasetypefunc#opt_code()","icagent::ast::nodes::icbasetypeopt#opt_code()","icagent::ast::nodes::icbasetypeother#opt_code()","icagent::ast::nodes::icbasetyperecord#opt_code()","icagent::ast::nodes::icbasetypesingle#opt_code()","icagent::ast::nodes::icbasetypevariant#opt_code()","icagent::ast::nodes::icbasetypevec#opt_code()","icagent::ast::parser#parse()","icagent::ast::statementparser#parse()","icagent::agent#poll()","icagent::agent#principal_is_within_ranges()","icagent::client#query()","icagent::agent#query_endpoint()","icagent::agent#query_raw()","icagent::candid::pipe#read()","icagent::client#read_state()","icagent::agent#read_state_endpoint()","icagent::agent#read_state_raw()","icagent::candid::read_type_table()","icagent::candid::pipe#readbyte()","icagent::candid::basetypes::rec()","icagent::candid::basetypes::record()","icagent::ast::assembler::recover_type()","icagent::ast::assembler::replace_last_occurrence()","icagent::ast::assembler::replace_multi_type()","icagent::agent#request_status_raw()","icagent::candid::safe_read()","icagent::candid::safe_read_byte()","icagent::principal::self_authenticating()","icagent::delegateidentity#sender()","icagent::identity#sender()","icagent::candid::basetypes::service()","icagent::delegateidentity#sign()","icagent::identity#sign()","icagent::request::sign_request()","icagent::certificate::signature()","icagent::ast::nodes::namednode#source_content()","icagent::ast::nodes::statementnode#source_content()","icagent::client#status()","icagent::syetemstate::subnet_canister_ranges()","icagent::syetemstate::subnet_public_key()","icagent::syetemstate::time()","icagent::ast::nodes::basetype#title()","icagent::ast::nodes::basetypechild#title()","icagent::ast::nodes::basetypecontent#title()","icagent::ast::nodes::basetypefunc#title()","icagent::ast::nodes::basetypekey#title()","icagent::ast::nodes::basetypeopt#title()","icagent::ast::nodes::basetypeother#title()","icagent::ast::nodes::basetyperecord#title()","icagent::ast::nodes::basetypesingle#title()","icagent::ast::nodes::basetypevariant#title()","icagent::ast::nodes::basetypevec#title()","icagent::ast::nodes::comment#title()","icagent::ast::nodes::didfile#title()","icagent::ast::nodes::icbasetype#title()","icagent::ast::nodes::icbasetypechild#title()","icagent::ast::nodes::icbasetypecontent#title()","icagent::ast::nodes::icbasetypefunc#title()","icagent::ast::nodes::icbasetypekey#title()","icagent::ast::nodes::icbasetypeopt#title()","icagent::ast::nodes::icbasetypeother#title()","icagent::ast::nodes::icbasetyperecord#title()","icagent::ast::nodes::icbasetypesingle#title()","icagent::ast::nodes::icbasetypevalue#title()","icagent::ast::nodes::icbasetypevariant#title()","icagent::ast::nodes::icbasetypevec#title()","icagent::ast::nodes::icserviceitem#title()","icagent::ast::nodes::icservicemethodname#title()","icagent::ast::nodes::icservicemethodparams#title()","icagent::ast::nodes::icservicemethodquery#title()","icagent::ast::nodes::icservicemethodreturn#title()","icagent::ast::nodes::icservicemethods#title()","icagent::ast::nodes::icservicename#title()","icagent::ast::nodes::icserviceparam#title()","icagent::ast::nodes::ictypedef#title()","icagent::ast::nodes::ictypename#title()","icagent::ast::nodes::instruction#title()","icagent::ast::nodes::namednode#title()","icagent::ast::nodes::service#title()","icagent::ast::nodes::statementblock#title()","icagent::ast::nodes::statementcontent#title()","icagent::ast::nodes::statementnode#title()","icagent::ast::nodes::typedeclaration#title()","icagent::ast::nodes::typename#title()","icagent::principal#to_account_id()","icagent::ast::nodes::namednode#to_array()","icagent::ast::nodes::statementnode#to_array()","icagent::ast::nodes::stringliteral#to_array()","icagent::ast::nodes::icserviceitem#to_obj()","icagent::ast::nodes::typedeclaration#to_obj()","icagent::identity#to_pem()","icagent::utils::to_request_id()","icagent::accountidentifier#to_s()","icagent::ast::nodes::basetype#to_s()","icagent::ast::nodes::basetypechild#to_s()","icagent::ast::nodes::basetypecontent#to_s()","icagent::ast::nodes::basetypefunc#to_s()","icagent::ast::nodes::basetypekey#to_s()","icagent::ast::nodes::basetypeopt#to_s()","icagent::ast::nodes::basetypeother#to_s()","icagent::ast::nodes::basetyperecord#to_s()","icagent::ast::nodes::basetypesingle#to_s()","icagent::ast::nodes::basetypevariant#to_s()","icagent::ast::nodes::basetypevec#to_s()","icagent::ast::nodes::comment#to_s()","icagent::ast::nodes::didfile#to_s()","icagent::ast::nodes::icbasetype#to_s()","icagent::ast::nodes::icbasetypechild#to_s()","icagent::ast::nodes::icbasetypecontent#to_s()","icagent::ast::nodes::icbasetypefunc#to_s()","icagent::ast::nodes::icbasetypekey#to_s()","icagent::ast::nodes::icbasetypeopt#to_s()","icagent::ast::nodes::icbasetypeother#to_s()","icagent::ast::nodes::icbasetyperecord#to_s()","icagent::ast::nodes::icbasetypesingle#to_s()","icagent::ast::nodes::icbasetypevalue#to_s()","icagent::ast::nodes::icbasetypevariant#to_s()","icagent::ast::nodes::icbasetypevec#to_s()","icagent::ast::nodes::icserviceitem#to_s()","icagent::ast::nodes::icservicemethodparams#to_s()","icagent::ast::nodes::icservicemethodquery#to_s()","icagent::ast::nodes::icservicemethodreturn#to_s()","icagent::ast::nodes::icservicename#to_s()","icagent::ast::nodes::icserviceparam#to_s()","icagent::ast::nodes::ictypedef#to_s()","icagent::ast::nodes::ictypename#to_s()","icagent::ast::nodes::instruction#to_s()","icagent::ast::nodes::namednode#to_s()","icagent::ast::nodes::service#to_s()","icagent::ast::nodes::statementblock#to_s()","icagent::ast::nodes::statementcontent#to_s()","icagent::ast::nodes::statementnode#to_s()","icagent::ast::nodes::stringliteral#to_s()","icagent::ast::nodes::typedeclaration#to_s()","icagent::ast::nodes::typename#to_s()","icagent::delegateidentity#to_s()","icagent::identity#to_s()","icagent::principal#to_s()","icagent::accountidentifier#to_str()","icagent::principal#to_str()","icagent::certificate::tree()","icagent::candid::recordclass#try_as_tuple()","icagent::candid::basetypes::tuple()","icagent::ast::nodes::typedeclaration#type_child_item_keys()","icagent::ast::nodes::typedeclaration#type_child_items()","icagent::ast::nodes::typedeclaration#type_param_content()","icagent::ast::nodes::typedeclaration#type_param_name()","icagent::ast::nodes::typedeclaration#type_refer_items()","icagent::ast::nodes::typedeclaration#type_root_opt_code()","icagent::candid::unicode_to_hex()","icagent::agent#update_raw()","icagent::ast::nodes::icservicemethods#value()","icagent::candid::basetypes::variant()","icagent::candid::basetypes::vec()","icagent::agent#verify()","icagent::identity#verify()","icagent::ast::writer#write()","","","","","","","","","","","","","","",""],"info":[["IcAgent","","IcAgent.html","",""],["IcAgent::AccountIdentifier","","IcAgent/AccountIdentifier.html","",""],["IcAgent::Agent","","IcAgent/Agent.html","",""],["IcAgent::AgentError","","IcAgent/AgentError.html","",""],["IcAgent::Ast","","IcAgent/Ast.html","",""],["IcAgent::Ast::Assembler","","IcAgent/Ast/Assembler.html","",""],["IcAgent::Ast::Nodes","","IcAgent/Ast/Nodes.html","",""],["IcAgent::Ast::Nodes::BaseType","","IcAgent/Ast/Nodes/BaseType.html","","<p>Represents a base type node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::BaseTypeChild","","IcAgent/Ast/Nodes/BaseTypeChild.html","","<p>Represents a child of a base type node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::BaseTypeContent","","IcAgent/Ast/Nodes/BaseTypeContent.html","","<p>Represents the content of a base type node in the abstract syntax tree, a subclass of NamedNode.\n<p>Represents …\n"],["IcAgent::Ast::Nodes::BaseTypeFunc","","IcAgent/Ast/Nodes/BaseTypeFunc.html","","<p>Represents a function base type node in the abstract syntax tree, a subclass of BaseType.\n"],["IcAgent::Ast::Nodes::BaseTypeKey","","IcAgent/Ast/Nodes/BaseTypeKey.html","","<p>Represents a key base type node in the abstract syntax tree, a subclass of BaseType.\n"],["IcAgent::Ast::Nodes::BaseTypeOpt","","IcAgent/Ast/Nodes/BaseTypeOpt.html","","<p>Represents an optional base type node in the abstract syntax tree, a subclass of BaseType.\n"],["IcAgent::Ast::Nodes::BaseTypeOther","","IcAgent/Ast/Nodes/BaseTypeOther.html","","<p>Represents an other base type node in the abstract syntax tree, a subclass of BaseType.\n"],["IcAgent::Ast::Nodes::BaseTypeRecord","","IcAgent/Ast/Nodes/BaseTypeRecord.html","","<p>Represents a record base type node in the abstract syntax tree, a subclass of BaseType.\n"],["IcAgent::Ast::Nodes::BaseTypeSingle","","IcAgent/Ast/Nodes/BaseTypeSingle.html","","<p>Represents a single base type node in the abstract syntax tree, a subclass of BaseType.\n"],["IcAgent::Ast::Nodes::BaseTypeVariant","","IcAgent/Ast/Nodes/BaseTypeVariant.html","","<p>Represents a variant base type node in the abstract syntax tree, a subclass of BaseType.\n"],["IcAgent::Ast::Nodes::BaseTypeVec","","IcAgent/Ast/Nodes/BaseTypeVec.html","","<p>Represents a vector base type node in the abstract syntax tree, a subclass of BaseType.\n"],["IcAgent::Ast::Nodes::Comment","","IcAgent/Ast/Nodes/Comment.html","","<p>Represents a comment node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::DIDFile","","IcAgent/Ast/Nodes/DIDFile.html","","<p>Represents a DID file node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::IcBaseType","","IcAgent/Ast/Nodes/IcBaseType.html","","<p>Represents an IC base type node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcBaseTypeChild","","IcAgent/Ast/Nodes/IcBaseTypeChild.html","","<p>Represents a child of an IC base type node in the abstract syntax tree, a subclass of StatementNode. …\n"],["IcAgent::Ast::Nodes::IcBaseTypeContent","","IcAgent/Ast/Nodes/IcBaseTypeContent.html","","<p>Represents the content of an IC base type node in the abstract syntax tree, a subclass of StatementNode …\n"],["IcAgent::Ast::Nodes::IcBaseTypeFunc","","IcAgent/Ast/Nodes/IcBaseTypeFunc.html","","<p>Represents an IC base type function node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcBaseTypeKey","","IcAgent/Ast/Nodes/IcBaseTypeKey.html","","<p>Represents an IC base type key node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcBaseTypeOpt","","IcAgent/Ast/Nodes/IcBaseTypeOpt.html","","<p>Represents an IC base type optional node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcBaseTypeOther","","IcAgent/Ast/Nodes/IcBaseTypeOther.html","","<p>Represents an IC base type other node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcBaseTypeRecord","","IcAgent/Ast/Nodes/IcBaseTypeRecord.html","","<p>Represents an IC base type record node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcBaseTypeSingle","","IcAgent/Ast/Nodes/IcBaseTypeSingle.html","","<p>Represents an IC base type single node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcBaseTypeValue","","IcAgent/Ast/Nodes/IcBaseTypeValue.html","","<p>Represents an IC base type value node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcBaseTypeVariant","","IcAgent/Ast/Nodes/IcBaseTypeVariant.html","","<p>Represents an IC base type variant node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcBaseTypeVec","","IcAgent/Ast/Nodes/IcBaseTypeVec.html","","<p>Represents an IC base type vector node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcServiceItem","","IcAgent/Ast/Nodes/IcServiceItem.html","","<p>Represents an IC service item node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::IcServiceMethodName","","IcAgent/Ast/Nodes/IcServiceMethodName.html","","<p>Represents an IC service method name node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::IcServiceMethodParams","","IcAgent/Ast/Nodes/IcServiceMethodParams.html","","<p>Represents an IC service method params node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::IcServiceMethodQuery","","IcAgent/Ast/Nodes/IcServiceMethodQuery.html","","<p>Represents an IC service method query node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::IcServiceMethodReturn","","IcAgent/Ast/Nodes/IcServiceMethodReturn.html","","<p>Represents an IC service method return node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::IcServiceMethods","","IcAgent/Ast/Nodes/IcServiceMethods.html","","<p>Represents IC service methods node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::IcServiceName","","IcAgent/Ast/Nodes/IcServiceName.html","","<p>Represents an IC service name node in the abstract syntax tree, a subclass of NamedNode.\n<p>Represents an …\n"],["IcAgent::Ast::Nodes::IcServiceParam","","IcAgent/Ast/Nodes/IcServiceParam.html","","<p>Represents an IC service param node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::IcTypeDef","","IcAgent/Ast/Nodes/IcTypeDef.html","","<p>Represents an IC type definition node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::IcTypeName","","IcAgent/Ast/Nodes/IcTypeName.html","","<p>Represents an IC type name node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::Instruction","","IcAgent/Ast/Nodes/Instruction.html","","<p>Represents an instruction node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::NamedNode","","IcAgent/Ast/Nodes/NamedNode.html","","<p>Represents a named node in the abstract syntax tree.\n"],["IcAgent::Ast::Nodes::Service","","IcAgent/Ast/Nodes/Service.html","","<p>Represents an IC service node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::StatementBlock","","IcAgent/Ast/Nodes/StatementBlock.html","","<p>Represents a statement block node in the abstract syntax tree, a subclass of StatementNode.\n"],["IcAgent::Ast::Nodes::StatementContent","","IcAgent/Ast/Nodes/StatementContent.html","","<p>Represents the content of a statement node in the abstract syntax tree, a subclass of StatementNode. …\n"],["IcAgent::Ast::Nodes::StatementNode","","IcAgent/Ast/Nodes/StatementNode.html","","<p>Represents a statement node in the abstract syntax tree with additional attributes.\n"],["IcAgent::Ast::Nodes::StringLiteral","","IcAgent/Ast/Nodes/StringLiteral.html","","<p>Represents a string literal node in the abstract syntax tree.\n"],["IcAgent::Ast::Nodes::TypeDeclaration","","IcAgent/Ast/Nodes/TypeDeclaration.html","","<p>Represents a type declaration node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Nodes::TypeName","","IcAgent/Ast/Nodes/TypeName.html","","<p>Represents a type name node in the abstract syntax tree, a subclass of NamedNode.\n"],["IcAgent::Ast::Parser","","IcAgent/Ast/Parser.html","","<p>The Parser class provides methods to parse data using a Treetop grammar and work with the resulting  …\n"],["IcAgent::Ast::StatementParser","","IcAgent/Ast/StatementParser.html","","<p>The StatementParser class provides methods to parse data and generate an Abstract Syntax Tree (AST) for …\n"],["IcAgent::Ast::Writer","","IcAgent/Ast/Writer.html","","<p>The Writer class provides methods to represent an Abstract Syntax Tree (AST) in different formats.\n"],["IcAgent::BaseException","","IcAgent/BaseException.html","",""],["IcAgent::Candid","","IcAgent/Candid.html","",""],["IcAgent::Candid::BaseType","","IcAgent/Candid/BaseType.html","","<p>Represents an IDL type.\n"],["IcAgent::Candid::BaseTypes","","IcAgent/Candid/BaseTypes.html","",""],["IcAgent::Candid::BoolClass","","IcAgent/Candid/BoolClass.html","","<p>Represents an IDL Bool\n"],["IcAgent::Candid::ConstructType","","IcAgent/Candid/ConstructType.html","",""],["IcAgent::Candid::EmptyClass","","IcAgent/Candid/EmptyClass.html","","<p>Represents an IDL Empty, a type which has no inhabitants.\n"],["IcAgent::Candid::FixedIntClass","","IcAgent/Candid/FixedIntClass.html","","<p>Represents an IDL fixed-width Int(n)\n"],["IcAgent::Candid::FixedNatClass","","IcAgent/Candid/FixedNatClass.html","","<p>Represents an IDL fixed-width Nat(n)\n"],["IcAgent::Candid::FloatClass","","IcAgent/Candid/FloatClass.html","","<p>Represents an IDL Float\n"],["IcAgent::Candid::FuncClass","","IcAgent/Candid/FuncClass.html","","<p>Represents an IDL Func reference\n"],["IcAgent::Candid::IntClass","","IcAgent/Candid/IntClass.html","","<p>Represents an IDL Int\n"],["IcAgent::Candid::NatClass","","IcAgent/Candid/NatClass.html","","<p>Represents an IDL Nat\n"],["IcAgent::Candid::NullClass","","IcAgent/Candid/NullClass.html","","<p>Represents an IDL Null check None == Null ?\n"],["IcAgent::Candid::OptClass","","IcAgent/Candid/OptClass.html","","<p>Represents an IDL Option\n"],["IcAgent::Candid::Pipe","","IcAgent/Candid/Pipe.html","",""],["IcAgent::Candid::PrimitiveType","","IcAgent/Candid/PrimitiveType.html","",""],["IcAgent::Candid::PrincipalClass","","IcAgent/Candid/PrincipalClass.html","","<p>Represents an IDL principal reference\n"],["IcAgent::Candid::RecClass","","IcAgent/Candid/RecClass.html","","<p>Represents a reference to an IDL type, used for defining recursive data types.\n"],["IcAgent::Candid::RecordClass","","IcAgent/Candid/RecordClass.html","","<p>Represents an IDL Record\n"],["IcAgent::Candid::ReservedClass","","IcAgent/Candid/ReservedClass.html","","<p>Represents an IDL Reserved\n"],["IcAgent::Candid::ServiceClass","","IcAgent/Candid/ServiceClass.html","","<p>Represents an IDL Service reference\n"],["IcAgent::Candid::TextClass","","IcAgent/Candid/TextClass.html","","<p>Represents an IDL Text\n"],["IcAgent::Candid::TupleClass","","IcAgent/Candid/TupleClass.html","","<p>Represents Tuple, a syntactic sugar for Record.\n"],["IcAgent::Candid::TypeIds","","IcAgent/Candid/TypeIds.html","",""],["IcAgent::Candid::TypeTable","","IcAgent/Candid/TypeTable.html","",""],["IcAgent::Candid::VariantClass","","IcAgent/Candid/VariantClass.html","","<p>Represents an IDL Variant\n"],["IcAgent::Candid::VecClass","","IcAgent/Candid/VecClass.html","","<p>Represents an IDL Array\n"],["IcAgent::Canister","","IcAgent/Canister.html","",""],["IcAgent::Certificate","","IcAgent/Certificate.html","",""],["IcAgent::Client","","IcAgent/Client.html","",""],["IcAgent::Common","","IcAgent/Common.html","",""],["IcAgent::Common::CyclesWallet","","IcAgent/Common/CyclesWallet.html","",""],["IcAgent::Common::Governance","","IcAgent/Common/Governance.html","",""],["IcAgent::Common::Ledger","","IcAgent/Common/Ledger.html","",""],["IcAgent::Common::Management","","IcAgent/Common/Management.html","",""],["IcAgent::DelegateIdentity","","IcAgent/DelegateIdentity.html","",""],["IcAgent::Error","","IcAgent/Error.html","",""],["IcAgent::Identity","","IcAgent/Identity.html","",""],["IcAgent::NodeId","","IcAgent/NodeId.html","",""],["IcAgent::Principal","","IcAgent/Principal.html","","<p>Base class for Principal.\n"],["IcAgent::PrincipalSort","","IcAgent/PrincipalSort.html","",""],["IcAgent::Request","","IcAgent/Request.html","",""],["IcAgent::SyetemState","","IcAgent/SyetemState.html","",""],["IcAgent::TypeError","","IcAgent/TypeError.html","",""],["IcAgent::Utils","","IcAgent/Utils.html","",""],["IcAgent::ValueError","","IcAgent/ValueError.html","",""],["_build_type_table_impl","IcAgent::Candid::BaseType","IcAgent/Candid/BaseType.html#method-c-_build_type_table_impl","(type_table = nil)",""],["_build_type_table_impl","IcAgent::Candid::FuncClass","IcAgent/Candid/FuncClass.html#method-i-_build_type_table_impl","(type_table)",""],["_build_type_table_impl","IcAgent::Candid::OptClass","IcAgent/Candid/OptClass.html#method-i-_build_type_table_impl","(type_table)",""],["_build_type_table_impl","IcAgent::Candid::PrimitiveType","IcAgent/Candid/PrimitiveType.html#method-i-_build_type_table_impl","(type_table = nil)",""],["_build_type_table_impl","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-i-_build_type_table_impl","(type_table)",""],["_build_type_table_impl","IcAgent::Candid::RecordClass","IcAgent/Candid/RecordClass.html#method-i-_build_type_table_impl","(type_table)",""],["_build_type_table_impl","IcAgent::Candid::ServiceClass","IcAgent/Candid/ServiceClass.html#method-i-_build_type_table_impl","(type_table)",""],["_build_type_table_impl","IcAgent::Candid::VariantClass","IcAgent/Candid/VariantClass.html#method-i-_build_type_table_impl","(type_table)",""],["_build_type_table_impl","IcAgent::Candid::VecClass","IcAgent/Candid/VecClass.html#method-i-_build_type_table_impl","(type_table)",""],["_encode_annotation","IcAgent::Candid::FuncClass","IcAgent/Candid/FuncClass.html#method-i-_encode_annotation","(ann)",""],["add","IcAgent::Candid::TypeTable","IcAgent/Candid/TypeTable.html#method-i-add","(obj, buf)",""],["add_child","IcAgent::Ast::Nodes::StatementNode","IcAgent/Ast/Nodes/StatementNode.html#method-i-add_child","()","<p>Adds a child to the statement node.\n"],["anonymous","IcAgent::Principal","IcAgent/Principal.html#method-c-anonymous","()","<p>Creates a new anonymous Principal.\n<p>Returns: The anonymous Principal instance.\n"],["buffer","IcAgent::Candid::Pipe","IcAgent/Candid/Pipe.html#method-i-buffer","()",""],["build_blob","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-build_blob","()","<p>Builds a Candid blob type.\n"],["build_opt","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-build_opt","(child_type, key_types = {})","<p>Builds a Candid optional type from a given child type.\n"],["build_record","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-build_record","(child_hash, multi_types = {}, key_types = {})","<p>Builds a Candid record type from a given hash of field names and types.\n"],["build_single_type","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-build_single_type","(child_type)","<p>Builds a single Candid type from a given child type.\n"],["build_type","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-build_type","(type_str, key_types = {}, multi_types = {})","<p>Builds a Candid type based on the given type string.\n"],["build_type","IcAgent::Candid","IcAgent/Candid.html#method-c-build_type","(raw_table, table, entry)",""],["build_type_table","IcAgent::Candid::BaseType","IcAgent/Candid/BaseType.html#method-i-build_type_table","(type_table)",""],["build_variant","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-build_variant","(child_hash, multi_types = {}, key_types = {})","<p>Builds a Candid variant type from a given hash of field names and types.\n"],["build_vec","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-build_vec","(child_type, key_types = {})","<p>Builds a Candid vector type from a given child type.\n"],["call","IcAgent::Client","IcAgent/Client.html#method-i-call","(canister_id, req_id, data)","<p>Calls a function on a canister.\n<p>Parameters:\n<p>canister_id: The ID of the canister to call.\n"],["call_endpoint","IcAgent::Agent","IcAgent/Agent.html#method-i-call_endpoint","(canister_id, request_id, data)","<p>Calls a method on a canister and returns the request ID.\n<p>@param canister_id [String] The ID of the target …\n"],["canister_controllers","IcAgent::SyetemState","IcAgent/SyetemState.html#method-c-canister_controllers","(agent, canister_id)","<p>Retrieves the controllers of a canister from a canister&#39;s state.\n<p>Parameters:\n<p>agent: The IcAgent::Client …\n"],["canister_module_hash","IcAgent::SyetemState","IcAgent/SyetemState.html#method-c-canister_module_hash","(agent, canister_id)","<p>Retrieves the module hash of a canister from a canister&#39;s state.\n<p>Parameters:\n<p>agent: The IcAgent::Client …\n"],["check_delegation","IcAgent::Agent","IcAgent/Agent.html#method-i-check_delegation","(delegation, effective_canister_id, disable_range_check)","<p>Check the delegation and return the corresponding root key.\n"],["check_type","IcAgent::Candid::BaseType","IcAgent/Candid/BaseType.html#method-c-check_type","()",""],["check_type","IcAgent::Candid::ConstructType","IcAgent/Candid/ConstructType.html#method-i-check_type","(t)",""],["check_type","IcAgent::Candid::PrimitiveType","IcAgent/Candid/PrimitiveType.html#method-i-check_type","(t)",""],["clean_tree","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-i-clean_tree","(root_node)","<p>Recursively cleans the syntax tree by removing nodes of class &#39;Treetop::Runtime::SyntaxNode&#39;. …\n"],["clean_tree","IcAgent::Ast::StatementParser","IcAgent/Ast/StatementParser.html#method-i-clean_tree","(root_node)","<p>Cleans up the AST tree by removing unnecessary nodes.\n"],["compare_to","IcAgent::Principal","IcAgent/Principal.html#method-i-compare_to","(other)","<p>Compares the Principal with another Principal.\n<p>Parameters:\n<p>other: The other Principal to compare with. …\n"],["covariant","IcAgent::Candid::BaseType","IcAgent/Candid/BaseType.html#method-c-covariant","()",""],["covariant","IcAgent::Candid::BoolClass","IcAgent/Candid/BoolClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::EmptyClass","IcAgent/Candid/EmptyClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::FixedIntClass","IcAgent/Candid/FixedIntClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::FixedNatClass","IcAgent/Candid/FixedNatClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::FloatClass","IcAgent/Candid/FloatClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::FuncClass","IcAgent/Candid/FuncClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::IntClass","IcAgent/Candid/IntClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::NatClass","IcAgent/Candid/NatClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::NullClass","IcAgent/Candid/NullClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::OptClass","IcAgent/Candid/OptClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::PrincipalClass","IcAgent/Candid/PrincipalClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::RecordClass","IcAgent/Candid/RecordClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::ReservedClass","IcAgent/Candid/ReservedClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::ServiceClass","IcAgent/Candid/ServiceClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::TextClass","IcAgent/Candid/TextClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::TupleClass","IcAgent/Candid/TupleClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::VariantClass","IcAgent/Candid/VariantClass.html#method-i-covariant","(x)",""],["covariant","IcAgent::Candid::VecClass","IcAgent/Candid/VecClass.html#method-i-covariant","(x)",""],["decode","IcAgent::Candid","IcAgent/Candid.html#method-c-decode","(data, ret_types = nil)","<p>@param [Object] data: decode a bytes value @param [nil] ret_types def decode(retTypes, data):\n"],["decode_blob","IcAgent::Utils","IcAgent/Utils.html#method-c-decode_blob","(blob_bytes)","<p>Decodes a binary blob into a string.\n<p>Parameters:\n<p>blob_bytes: The binary blob to decode.\n"],["decode_value","IcAgent::Candid::BaseType","IcAgent/Candid/BaseType.html#method-c-decode_value","()",""],["decode_value","IcAgent::Candid::BoolClass","IcAgent/Candid/BoolClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::EmptyClass","IcAgent/Candid/EmptyClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::FixedIntClass","IcAgent/Candid/FixedIntClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::FixedNatClass","IcAgent/Candid/FixedNatClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::FloatClass","IcAgent/Candid/FloatClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::FuncClass","IcAgent/Candid/FuncClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::IntClass","IcAgent/Candid/IntClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::NatClass","IcAgent/Candid/NatClass.html#method-i-decode_value","(pipe, t)",""],["decode_value","IcAgent::Candid::NullClass","IcAgent/Candid/NullClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::OptClass","IcAgent/Candid/OptClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::PrincipalClass","IcAgent/Candid/PrincipalClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::RecordClass","IcAgent/Candid/RecordClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::ReservedClass","IcAgent/Candid/ReservedClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::ServiceClass","IcAgent/Candid/ServiceClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::TextClass","IcAgent/Candid/TextClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::TupleClass","IcAgent/Candid/TupleClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::VariantClass","IcAgent/Candid/VariantClass.html#method-i-decode_value","(b, t)",""],["decode_value","IcAgent::Candid::VecClass","IcAgent/Candid/VecClass.html#method-i-decode_value","(b, t)",""],["delegation","IcAgent::Certificate","IcAgent/Certificate.html#method-c-delegation","(cert)","<p>Retrieves the delegation from a certificate.\n<p>Parameters:\n<p>cert: The certificate object.\n"],["display","IcAgent::Candid::BaseType","IcAgent/Candid/BaseType.html#method-i-display","()",""],["display","IcAgent::Candid::FuncClass","IcAgent/Candid/FuncClass.html#method-i-display","()",""],["display","IcAgent::Candid::OptClass","IcAgent/Candid/OptClass.html#method-i-display","()",""],["display","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-i-display","()",""],["display","IcAgent::Candid::RecordClass","IcAgent/Candid/RecordClass.html#method-i-display","()",""],["display","IcAgent::Candid::TupleClass","IcAgent/Candid/TupleClass.html#method-i-display","()",""],["display","IcAgent::Candid::VariantClass","IcAgent/Candid/VariantClass.html#method-i-display","()",""],["display","IcAgent::Candid::VecClass","IcAgent/Candid/VecClass.html#method-i-display","()",""],["elements_to_s","IcAgent::Ast::Nodes::NamedNode","IcAgent/Ast/Nodes/NamedNode.html#method-i-elements_to_s","()",""],["elements_to_s","IcAgent::Ast::Nodes::StatementNode","IcAgent/Ast/Nodes/StatementNode.html#method-i-elements_to_s","()","<p>Converts the children of the statement node to a string.\n"],["encode","IcAgent::Candid","IcAgent/Candid.html#method-c-encode","(params)","<p>@param [Object] params = [{type, value}] @return data = b&#39;DIDL&#39; + len(params) + encoded types …\n"],["encode","IcAgent::Candid::TypeTable","IcAgent/Candid/TypeTable.html#method-i-encode","()",""],["encode_list","IcAgent::Utils","IcAgent/Utils.html#method-c-encode_list","(l)","<p>Encodes a list of items into a binary string.\n<p>Parameters:\n<p>l: The list of items to encode.\n"],["encode_type","IcAgent::Candid::BaseType","IcAgent/Candid/BaseType.html#method-c-encode_type","()",""],["encode_type","IcAgent::Candid::BoolClass","IcAgent/Candid/BoolClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::ConstructType","IcAgent/Candid/ConstructType.html#method-i-encode_type","(type_table)",""],["encode_type","IcAgent::Candid::EmptyClass","IcAgent/Candid/EmptyClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::FixedIntClass","IcAgent/Candid/FixedIntClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::FixedNatClass","IcAgent/Candid/FixedNatClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::FloatClass","IcAgent/Candid/FloatClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::IntClass","IcAgent/Candid/IntClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::NatClass","IcAgent/Candid/NatClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::NullClass","IcAgent/Candid/NullClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::PrincipalClass","IcAgent/Candid/PrincipalClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-i-encode_type","(type_table)",""],["encode_type","IcAgent::Candid::ReservedClass","IcAgent/Candid/ReservedClass.html#method-i-encode_type","(type_table = nil)",""],["encode_type","IcAgent::Candid::TextClass","IcAgent/Candid/TextClass.html#method-i-encode_type","(type_table = nil)",""],["encode_value","IcAgent::Candid::BaseType","IcAgent/Candid/BaseType.html#method-c-encode_value","()",""],["encode_value","IcAgent::Candid::BoolClass","IcAgent/Candid/BoolClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::EmptyClass","IcAgent/Candid/EmptyClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::FixedIntClass","IcAgent/Candid/FixedIntClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::FixedNatClass","IcAgent/Candid/FixedNatClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::FloatClass","IcAgent/Candid/FloatClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::FuncClass","IcAgent/Candid/FuncClass.html#method-i-encode_value","(vals)",""],["encode_value","IcAgent::Candid::IntClass","IcAgent/Candid/IntClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::NatClass","IcAgent/Candid/NatClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::NullClass","IcAgent/Candid/NullClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::OptClass","IcAgent/Candid/OptClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::PrincipalClass","IcAgent/Candid/PrincipalClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::RecordClass","IcAgent/Candid/RecordClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::ReservedClass","IcAgent/Candid/ReservedClass.html#method-i-encode_value","()",""],["encode_value","IcAgent::Candid::ServiceClass","IcAgent/Candid/ServiceClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::TextClass","IcAgent/Candid/TextClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::TupleClass","IcAgent/Candid/TupleClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::VariantClass","IcAgent/Candid/VariantClass.html#method-i-encode_value","(val)",""],["encode_value","IcAgent::Candid::VecClass","IcAgent/Candid/VecClass.html#method-i-encode_value","(val)",""],["end?","IcAgent::Candid::Pipe","IcAgent/Candid/Pipe.html#method-i-end-3F","()",""],["extract_der","IcAgent::Agent","IcAgent/Agent.html#method-i-extract_der","(der_buf)","<p>Extract the BLS public key from the DER buffer.\n"],["fill","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-i-fill","(t)",""],["from_hex","IcAgent::Principal","IcAgent/Principal.html#method-c-from_hex","(s)","<p>Creates a new Principal from a hexadecimal string representation.\n<p>Parameters:\n<p>s: The hexadecimal string …\n"],["from_json","IcAgent::DelegateIdentity","IcAgent/DelegateIdentity.html#method-c-from_json","(ic_identity, ic_delegation)","<p>Creates a new DelegateIdentity instance from JSON representations of the Identity and delegation.\n<p>Parameters: …\n"],["from_seed","IcAgent::Identity","IcAgent/Identity.html#method-c-from_seed","(mnemonic)","<p>Creates a new Identity instance from a seed phrase (mnemonic).\n<p>Parameters:\n<p>mnemonic: The seed phrase (mnemonic) …\n"],["from_str","IcAgent::Principal","IcAgent/Principal.html#method-c-from_str","(s)","<p>Creates a new Principal from a string representation.\n<p>Parameters:\n<p>s: The string representation of the  …\n"],["func","IcAgent::Candid::BaseTypes","IcAgent/Candid/BaseTypes.html#method-c-func","(args, ret, annotations)",""],["gen_source_tree","IcAgent::Ast::StatementParser","IcAgent/Ast/StatementParser.html#method-i-gen_source_tree","(root_node, tree_root_node = nil, tree_current_node = nil)","<p>Generates the source tree from the AST tree. @param [Object] root_node @param [nil] tree_root_node @param …\n"],["generate","IcAgent::AccountIdentifier","IcAgent/AccountIdentifier.html#method-c-generate","(principal, sub_account = 0)","<p>Generates a new AccountIdentifier from a Principal.\n<p>Parameters:\n<p>principal: The Principal associated with …\n"],["get_child_code","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-get_child_code","(item_str, index_str)","<p>Extracts the child Candid code from the type string.\n"],["get_expiry_date","IcAgent::Agent","IcAgent/Agent.html#method-i-get_expiry_date","()","<p>Calculates the expiration date for ingress requests.\n<p>@return [Integer] The expiration date in nanoseconds. …\n"],["get_opt_code","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-get_opt_code","(item_str)","<p>Extracts the Candid code (e.g., “record”, “variant”, “opt”, etc.) from …\n"],["get_params_refer_values","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-get_params_refer_values","(type_str)","<p>Gets the refer types used in the type string.\n"],["get_principal","IcAgent::Agent","IcAgent/Agent.html#method-i-get_principal","()","<p>Retrieves the principal associated with the agent&#39;s identity.\n<p>@return [Principal] The principal associated …\n"],["get_record_content","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-get_record_content","(record_str)","<p>Extracts the content of a Candid record type from the type string.\n"],["get_record_key_value","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-get_record_key_value","(item_str, index_str, key_index = 0)","<p>Extracts the key-value pairs from a Candid record item string.\n"],["get_type","IcAgent::Candid","IcAgent/Candid.html#method-c-get_type","(raw_table, table, t)",""],["get_type","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-i-get_type","()",""],["get_variant_content","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-get_variant_content","(variant_str)","<p>Extracts the content of a Candid variant type from the type string.\n"],["gt_eq","IcAgent::Principal","IcAgent/Principal.html#method-i-gt_eq","(other)","<p>Utility method checking whether a provided Principal is greater than or equal to the current one using …\n"],["has","IcAgent::Candid::TypeTable","IcAgent/Candid/TypeTable.html#method-i-has","(obj)",""],["ic_service","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-i-ic_service","()","<p>Retrieves the root node of the IC service from the AST.\n<p>Returns:\n<p>The root node representing the IC service, …\n"],["ic_service_methods","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-i-ic_service_methods","()","<p>Retrieves the root node of the IC service methods from the AST.\n<p>Returns:\n<p>The root node representing the …\n"],["ic_statement_childs","IcAgent::Ast::StatementParser","IcAgent/Ast/StatementParser.html#method-i-ic_statement_childs","()","<p>Returns the child nodes of the AST statement.\n"],["ic_statement_root","IcAgent::Ast::StatementParser","IcAgent/Ast/StatementParser.html#method-i-ic_statement_root","()","<p>Returns the root node of the AST statement.\n"],["ic_type_by_name","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-i-ic_type_by_name","(type_name)","<p>Retrieves the AST node of an IC type by its name.\n<p>Parameters:\n<p>type_name: The name of the IC type to retrieve. …\n"],["ic_type_name","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-i-ic_type_name","(ic_type)","<p>Retrieves the name of an IC type from its AST node.\n"],["ic_type_names","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-i-ic_type_names","()","<p>Retrieves an array of names of all IC types from the AST.\n"],["ic_types","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-i-ic_types","()","<p>Retrieves an array of AST nodes representing IC type declarations.\n"],["ic_types_obj","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-i-ic_types_obj","()","<p>Converts the IC type declarations to an array of corresponding objects.\n"],["id","IcAgent::Candid::BoolClass","IcAgent/Candid/BoolClass.html#method-i-id","()",""],["id","IcAgent::Candid::EmptyClass","IcAgent/Candid/EmptyClass.html#method-i-id","()",""],["id","IcAgent::Candid::FixedIntClass","IcAgent/Candid/FixedIntClass.html#method-i-id","()",""],["id","IcAgent::Candid::FixedNatClass","IcAgent/Candid/FixedNatClass.html#method-i-id","()",""],["id","IcAgent::Candid::FloatClass","IcAgent/Candid/FloatClass.html#method-i-id","()",""],["id","IcAgent::Candid::FuncClass","IcAgent/Candid/FuncClass.html#method-i-id","()",""],["id","IcAgent::Candid::IntClass","IcAgent/Candid/IntClass.html#method-i-id","()",""],["id","IcAgent::Candid::NatClass","IcAgent/Candid/NatClass.html#method-i-id","()",""],["id","IcAgent::Candid::NullClass","IcAgent/Candid/NullClass.html#method-i-id","()",""],["id","IcAgent::Candid::OptClass","IcAgent/Candid/OptClass.html#method-i-id","()",""],["id","IcAgent::Candid::PrincipalClass","IcAgent/Candid/PrincipalClass.html#method-i-id","()",""],["id","IcAgent::Candid::RecordClass","IcAgent/Candid/RecordClass.html#method-i-id","()",""],["id","IcAgent::Candid::ReservedClass","IcAgent/Candid/ReservedClass.html#method-i-id","()",""],["id","IcAgent::Candid::ServiceClass","IcAgent/Candid/ServiceClass.html#method-i-id","()",""],["id","IcAgent::Candid::TextClass","IcAgent/Candid/TextClass.html#method-i-id","()",""],["id","IcAgent::Candid::TupleClass","IcAgent/Candid/TupleClass.html#method-i-id","()",""],["id","IcAgent::Candid::VariantClass","IcAgent/Candid/VariantClass.html#method-i-id","()",""],["id","IcAgent::Candid::VecClass","IcAgent/Candid/VecClass.html#method-i-id","()",""],["idl_hash","IcAgent::Utils","IcAgent/Utils.html#method-c-idl_hash","(s)","<p>Computes a hash value for an IDL string.\n<p>Parameters:\n<p>s: The IDL string to hash.\n"],["index_of","IcAgent::Candid::TypeTable","IcAgent/Candid/TypeTable.html#method-i-index_of","(type_name)",""],["inspect","IcAgent::DelegateIdentity","IcAgent/DelegateIdentity.html#method-i-inspect","()",""],["inspect","IcAgent::Identity","IcAgent/Identity.html#method-i-inspect","()",""],["label_hash","IcAgent::Utils","IcAgent/Utils.html#method-c-label_hash","(s)","<p>Computes a hash value for sorting records by key.\n<p>Parameters:\n<p>s: The key to hash.\n"],["leb128_string_hex","IcAgent::Candid","IcAgent/Candid.html#method-c-leb128_string_hex","(p_str)",""],["leb128i_decode","IcAgent::Candid","IcAgent/Candid.html#method-c-leb128i_decode","(pipe)",""],["leb128u_decode","IcAgent::Candid","IcAgent/Candid.html#method-c-leb128u_decode","(pipe)","<p>through Pipe to decode bytes\n"],["length","IcAgent::Candid::Pipe","IcAgent/Candid/Pipe.html#method-i-length","()",""],["lookup","IcAgent::Certificate","IcAgent/Certificate.html#method-c-lookup","(path, cert)","<p>Performs a lookup operation in the certificate tree based on the given path.\n<p>Parameters:\n<p>path: The path …\n"],["lt_eq","IcAgent::Principal","IcAgent/Principal.html#method-i-lt_eq","(other)","<p>Utility method checking whether a provided Principal is less than or equal to the current one using the …\n"],["management_canister","IcAgent::Principal","IcAgent/Principal.html#method-c-management_canister","()","<p>Creates a new Principal instance representing the management canister.\n<p>Returns: The Principal instance …\n"],["merge","IcAgent::Candid::TypeTable","IcAgent/Candid/TypeTable.html#method-i-merge","(obj, knot)",""],["method_missing","IcAgent::Candid::BaseTypes","IcAgent/Candid/BaseTypes.html#method-c-method_missing","(method_name)",""],["name","IcAgent::Candid::BoolClass","IcAgent/Candid/BoolClass.html#method-i-name","()",""],["name","IcAgent::Candid::EmptyClass","IcAgent/Candid/EmptyClass.html#method-i-name","()",""],["name","IcAgent::Candid::FixedIntClass","IcAgent/Candid/FixedIntClass.html#method-i-name","()",""],["name","IcAgent::Candid::FixedNatClass","IcAgent/Candid/FixedNatClass.html#method-i-name","()",""],["name","IcAgent::Candid::FloatClass","IcAgent/Candid/FloatClass.html#method-i-name","()",""],["name","IcAgent::Candid::FuncClass","IcAgent/Candid/FuncClass.html#method-i-name","()",""],["name","IcAgent::Candid::IntClass","IcAgent/Candid/IntClass.html#method-i-name","()",""],["name","IcAgent::Candid::NatClass","IcAgent/Candid/NatClass.html#method-i-name","()",""],["name","IcAgent::Candid::NullClass","IcAgent/Candid/NullClass.html#method-i-name","()",""],["name","IcAgent::Candid::OptClass","IcAgent/Candid/OptClass.html#method-i-name","()",""],["name","IcAgent::Candid::PrincipalClass","IcAgent/Candid/PrincipalClass.html#method-i-name","()",""],["name","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-i-name","()",""],["name","IcAgent::Candid::RecordClass","IcAgent/Candid/RecordClass.html#method-i-name","()",""],["name","IcAgent::Candid::ReservedClass","IcAgent/Candid/ReservedClass.html#method-i-name","()",""],["name","IcAgent::Candid::ServiceClass","IcAgent/Candid/ServiceClass.html#method-i-name","()",""],["name","IcAgent::Candid::TextClass","IcAgent/Candid/TextClass.html#method-i-name","()",""],["name","IcAgent::Candid::VariantClass","IcAgent/Candid/VariantClass.html#method-i-name","()",""],["name","IcAgent::Candid::VecClass","IcAgent/Candid/VecClass.html#method-i-name","()",""],["new","IcAgent::AccountIdentifier","IcAgent/AccountIdentifier.html#method-c-new","(hash)","<p>Initializes a new instance of the AccountIdentifier class.\n<p>Parameters:\n<p>hash: The hash representing the …\n"],["new","IcAgent::Agent","IcAgent/Agent.html#method-c-new","(identity, client, nonce_factory = nil, ingress_expiry = 300, root_key = IcAgent::IC_ROOT_KEY)","<p>Initializes a new IC agent.\n<p>@param identity [Identity] The identity associated with the agent. @param …\n"],["new","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-c-new","()","<p>Initializes the Parser by loading the Treetop grammar file.\n"],["new","IcAgent::Ast::StatementParser","IcAgent/Ast/StatementParser.html#method-c-new","()",""],["new","IcAgent::Ast::Writer","IcAgent/Ast/Writer.html#method-c-new","(tree)","<p>Initializes the Writer with an Abstract Syntax Tree (AST).\n<p>Parameters:\n<p>tree: The Abstract Syntax Tree ( …\n"],["new","IcAgent::Candid::BoolClass","IcAgent/Candid/BoolClass.html#method-c-new","()",""],["new","IcAgent::Candid::ConstructType","IcAgent/Candid/ConstructType.html#method-c-new","()",""],["new","IcAgent::Candid::EmptyClass","IcAgent/Candid/EmptyClass.html#method-c-new","()",""],["new","IcAgent::Candid::FixedIntClass","IcAgent/Candid/FixedIntClass.html#method-c-new","(bits)",""],["new","IcAgent::Candid::FixedNatClass","IcAgent/Candid/FixedNatClass.html#method-c-new","(bits)",""],["new","IcAgent::Candid::FloatClass","IcAgent/Candid/FloatClass.html#method-c-new","(bits)",""],["new","IcAgent::Candid::FuncClass","IcAgent/Candid/FuncClass.html#method-c-new","(arg_types, ret_types, annotations)",""],["new","IcAgent::Candid::IntClass","IcAgent/Candid/IntClass.html#method-c-new","()",""],["new","IcAgent::Candid::NatClass","IcAgent/Candid/NatClass.html#method-c-new","()",""],["new","IcAgent::Candid::NullClass","IcAgent/Candid/NullClass.html#method-c-new","()",""],["new","IcAgent::Candid::OptClass","IcAgent/Candid/OptClass.html#method-c-new","(_type)",""],["new","IcAgent::Candid::Pipe","IcAgent/Candid/Pipe.html#method-c-new","(buffer = '', length = 0)",""],["new","IcAgent::Candid::PrimitiveType","IcAgent/Candid/PrimitiveType.html#method-c-new","()",""],["new","IcAgent::Candid::PrincipalClass","IcAgent/Candid/PrincipalClass.html#method-c-new","()",""],["new","IcAgent::Candid::RecClass","IcAgent/Candid/RecClass.html#method-c-new","()",""],["new","IcAgent::Candid::RecordClass","IcAgent/Candid/RecordClass.html#method-c-new","(field)",""],["new","IcAgent::Candid::ReservedClass","IcAgent/Candid/ReservedClass.html#method-c-new","()",""],["new","IcAgent::Candid::ServiceClass","IcAgent/Candid/ServiceClass.html#method-c-new","(field)",""],["new","IcAgent::Candid::TextClass","IcAgent/Candid/TextClass.html#method-c-new","()",""],["new","IcAgent::Candid::TupleClass","IcAgent/Candid/TupleClass.html#method-c-new","(*_components)",""],["new","IcAgent::Candid::TypeTable","IcAgent/Candid/TypeTable.html#method-c-new","()",""],["new","IcAgent::Candid::VariantClass","IcAgent/Candid/VariantClass.html#method-c-new","(field)",""],["new","IcAgent::Candid::VecClass","IcAgent/Candid/VecClass.html#method-c-new","(_type)",""],["new","IcAgent::Canister","IcAgent/Canister.html#method-c-new","(agent, canister_id, candid=nil)","<p>Constructor for the Canister class.\n<p>Parameters:\n<p>agent: An instance of the agent.\n"],["new","IcAgent::Client","IcAgent/Client.html#method-c-new","(url = 'https://ic0.app')","<p>Initializes a new instance of the Client class.\n<p>Parameters:\n<p>url: The URL of the IC agent. Defaults to &#39; …\n"],["new","IcAgent::Common::CyclesWallet","IcAgent/Common/CyclesWallet.html#method-c-new","(iden = nil, wallet_id)","<p>Constructor for the CyclesWallet class.\n<p>Parameters:\n<p>iden: (Optional) An instance of the Identity class. …\n"],["new","IcAgent::Common::Governance","IcAgent/Common/Governance.html#method-c-new","(iden = nil)","<p>Constructor for the Governance class.\n<p>Parameters:\n<p>iden: (Optional) An instance of the Identity class.\n"],["new","IcAgent::Common::Ledger","IcAgent/Common/Ledger.html#method-c-new","(iden = nil)","<p>Constructor for the Ledger class.\n<p>Parameters:\n<p>iden: (Optional) An instance of the Identity class.\n"],["new","IcAgent::Common::Management","IcAgent/Common/Management.html#method-c-new","(iden = nil)","<p>Constructor for the Management class.\n<p>Parameters:\n<p>iden: (Optional) An instance of the Identity class.\n"],["new","IcAgent::DelegateIdentity","IcAgent/DelegateIdentity.html#method-c-new","(identity, delegation)","<p>Initializes a new instance of the DelegateIdentity class.\n<p>Parameters:\n<p>identity: The Identity associated …\n"],["new","IcAgent::Identity","IcAgent/Identity.html#method-c-new","(privkey = '', type = 'ed25519', anonymous = false)","<p>Initializes a new instance of the Identity class.\n<p>Parameters:\n<p>privkey: The private key of the identity …\n"],["new","IcAgent::Principal","IcAgent/Principal.html#method-c-new","(bytes: ''.b)","<p>Initializes a new instance of the Principal class.\n<p>Parameters:\n<p>bytes: The bytes representing the principal. …\n"],["opt","IcAgent::Candid::BaseTypes","IcAgent/Candid/BaseTypes.html#method-c-opt","(t)",""],["opt_code","IcAgent::Ast::Nodes::BaseTypeFunc","IcAgent/Ast/Nodes/BaseTypeFunc.html#method-i-opt_code","()","<p>Returns the opt code for the function base type.\n"],["opt_code","IcAgent::Ast::Nodes::BaseTypeOpt","IcAgent/Ast/Nodes/BaseTypeOpt.html#method-i-opt_code","()","<p>Returns the opt code for the optional base type.\n"],["opt_code","IcAgent::Ast::Nodes::BaseTypeOther","IcAgent/Ast/Nodes/BaseTypeOther.html#method-i-opt_code","()","<p>Returns the opt code for the other base type.\n"],["opt_code","IcAgent::Ast::Nodes::BaseTypeRecord","IcAgent/Ast/Nodes/BaseTypeRecord.html#method-i-opt_code","()","<p>Returns the opt code for the record base type.\n"],["opt_code","IcAgent::Ast::Nodes::BaseTypeSingle","IcAgent/Ast/Nodes/BaseTypeSingle.html#method-i-opt_code","()","<p>Returns the opt code for the single base type.\n"],["opt_code","IcAgent::Ast::Nodes::BaseTypeVariant","IcAgent/Ast/Nodes/BaseTypeVariant.html#method-i-opt_code","()","<p>Returns the opt code for the variant base type.\n"],["opt_code","IcAgent::Ast::Nodes::BaseTypeVec","IcAgent/Ast/Nodes/BaseTypeVec.html#method-i-opt_code","()","<p>Returns the opt code for the vector base type.\n"],["opt_code","IcAgent::Ast::Nodes::IcBaseTypeFunc","IcAgent/Ast/Nodes/IcBaseTypeFunc.html#method-i-opt_code","()","<p>Returns the opt code for the IC base type function node, which is &#39;func&#39;.\n"],["opt_code","IcAgent::Ast::Nodes::IcBaseTypeOpt","IcAgent/Ast/Nodes/IcBaseTypeOpt.html#method-i-opt_code","()","<p>Returns the opt code for the IC base type optional node, which is &#39;opt&#39;.\n"],["opt_code","IcAgent::Ast::Nodes::IcBaseTypeOther","IcAgent/Ast/Nodes/IcBaseTypeOther.html#method-i-opt_code","()","<p>Returns the opt code for the IC base type other node.\n"],["opt_code","IcAgent::Ast::Nodes::IcBaseTypeRecord","IcAgent/Ast/Nodes/IcBaseTypeRecord.html#method-i-opt_code","()","<p>Returns the opt code for the IC base type record node, which is &#39;record&#39;.\n"],["opt_code","IcAgent::Ast::Nodes::IcBaseTypeSingle","IcAgent/Ast/Nodes/IcBaseTypeSingle.html#method-i-opt_code","()","<p>Returns the opt code for the IC base type single node, which is &#39;single&#39;.\n"],["opt_code","IcAgent::Ast::Nodes::IcBaseTypeVariant","IcAgent/Ast/Nodes/IcBaseTypeVariant.html#method-i-opt_code","()","<p>Returns the opt code for the IC base type variant node, which is &#39;variant&#39;.\n"],["opt_code","IcAgent::Ast::Nodes::IcBaseTypeVec","IcAgent/Ast/Nodes/IcBaseTypeVec.html#method-i-opt_code","()","<p>Returns the opt code for the IC base type vector node, which is &#39;vec&#39;.\n"],["parse","IcAgent::Ast::Parser","IcAgent/Ast/Parser.html#method-i-parse","(data, return_type = :string)","<p>Parses the given data using the Treetop parser and returns the AST.\n<p>Parameters:\n<p>data: The data to be parsed. …\n"],["parse","IcAgent::Ast::StatementParser","IcAgent/Ast/StatementParser.html#method-i-parse","(data, return_type = :string)","<p>Parses the input data and generates the Abstract Syntax Tree (AST) for nested types based on the grammar. …\n"],["poll","IcAgent::Agent","IcAgent/Agent.html#method-i-poll","(canister_id, req_id, delay = 1, timeout = IcAgent::DEFAULT_POLL_TIMEOUT_SECS)","<p>Polls a canister for the status of a request.\n<p>@param canister_id [String] The ID of the target canister. …\n"],["principal_is_within_ranges","IcAgent::Agent","IcAgent/Agent.html#method-i-principal_is_within_ranges","(principal, ranges)",""],["query","IcAgent::Client","IcAgent/Client.html#method-i-query","(canister_id, data)","<p>Sends a query to a canister.\n<p>Parameters:\n<p>canister_id: The ID of the canister to query.\n"],["query_endpoint","IcAgent::Agent","IcAgent/Agent.html#method-i-query_endpoint","(canister_id, data)","<p>Sends a query request to a canister and decodes the response using CBOR.\n<p>@param canister_id [String]  …\n"],["query_raw","IcAgent::Agent","IcAgent/Agent.html#method-i-query_raw","(canister_id, method_name, arg, return_type = nil, effective_canister_id = nil)","<p>Sends a raw query request to a canister and handles the response.\n<p>@param canister_id [String] The ID of …\n"],["read","IcAgent::Candid::Pipe","IcAgent/Candid/Pipe.html#method-i-read","(num)",""],["read_state","IcAgent::Client","IcAgent/Client.html#method-i-read_state","(canister_id, data)","<p>Reads the state of a canister.\n<p>Parameters:\n<p>canister_id: The ID of the canister to read the state from. …\n"],["read_state_endpoint","IcAgent::Agent","IcAgent/Agent.html#method-i-read_state_endpoint","(canister_id, data)","<p>Reads the state of a canister.\n<p>@param canister_id [String] The ID of the target canister. @param data …\n"],["read_state_raw","IcAgent::Agent","IcAgent/Agent.html#method-i-read_state_raw","(canister_id, paths, bls_verify = true)","<p>Sends a raw read state request to a canister and handles the response.\n<p>@param canister_id [String] The …\n"],["read_type_table","IcAgent::Candid","IcAgent/Candid.html#method-c-read_type_table","(pipe)",""],["readbyte","IcAgent::Candid::Pipe","IcAgent/Candid/Pipe.html#method-i-readbyte","()",""],["rec","IcAgent::Candid::BaseTypes","IcAgent/Candid/BaseTypes.html#method-c-rec","()",""],["record","IcAgent::Candid::BaseTypes","IcAgent/Candid/BaseTypes.html#method-c-record","(t)",""],["recover_type","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-recover_type","(type_str, multi_types)","<p>Recovers the original type string from the multi_types hash.\n"],["replace_last_occurrence","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-replace_last_occurrence","(string, pattern, replacement)","<p>Replaces the last occurrence of a pattern in a string with the given replacement.\n"],["replace_multi_type","IcAgent::Ast::Assembler","IcAgent/Ast/Assembler.html#method-c-replace_multi_type","(type_str)","<p>Replaces occurrences of Candid record and variant types with unique type names.\n"],["request_status_raw","IcAgent::Agent","IcAgent/Agent.html#method-i-request_status_raw","(canister_id, req_id)","<p>Retrieves the status and certificate of a request from a canister.\n<p>@param canister_id [String] The ID …\n"],["safe_read","IcAgent::Candid","IcAgent/Candid.html#method-c-safe_read","(pipe, num)",""],["safe_read_byte","IcAgent::Candid","IcAgent/Candid.html#method-c-safe_read_byte","(pipe)",""],["self_authenticating","IcAgent::Principal","IcAgent/Principal.html#method-c-self_authenticating","(pubkey)","<p>Creates a new self-authenticating Principal.\n<p>Parameters:\n<p>pubkey: The public key associated with the self-authenticating …\n"],["sender","IcAgent::DelegateIdentity","IcAgent/DelegateIdentity.html#method-i-sender","()","<p>Returns the sender Principal associated with the DelegateIdentity.\n<p>Returns: The sender Principal.\n"],["sender","IcAgent::Identity","IcAgent/Identity.html#method-i-sender","()","<p>Returns the sender Principal associated with the Identity.\n<p>Returns: The sender Principal.\n"],["service","IcAgent::Candid::BaseTypes","IcAgent/Candid/BaseTypes.html#method-c-service","(t)",""],["sign","IcAgent::DelegateIdentity","IcAgent/DelegateIdentity.html#method-i-sign","(msg)","<p>Signs a message using the DelegateIdentity.\n<p>Parameters:\n<p>msg: The message to sign.\n"],["sign","IcAgent::Identity","IcAgent/Identity.html#method-i-sign","(msg)","<p>Signs a message using the Identity.\n<p>Parameters:\n<p>msg: The message to sign.\n"],["sign_request","IcAgent::Request","IcAgent/Request.html#method-c-sign_request","(req, iden)","<p>Signs a request with an identity&#39;s signature and encodes it using CBOR.\n<p>@param req [Hash] The request …\n"],["signature","IcAgent::Certificate","IcAgent/Certificate.html#method-c-signature","(cert)","<p>Retrieves the signature from a certificate.\n<p>Parameters:\n<p>cert: The certificate object.\n"],["source_content","IcAgent::Ast::Nodes::NamedNode","IcAgent/Ast/Nodes/NamedNode.html#method-i-source_content","()",""],["source_content","IcAgent::Ast::Nodes::StatementNode","IcAgent/Ast/Nodes/StatementNode.html#method-i-source_content","()","<p>Returns the source content of the statement node by removing leading and trailing whitespaces.\n"],["status","IcAgent::Client","IcAgent/Client.html#method-i-status","(timeout: DEFAULT_TIMEOUT_QUERY)","<p>Retrieves the status of the IC agent.\n<p>Parameters:\n<p>timeout: The timeout for the status request. Defaults …\n"],["subnet_canister_ranges","IcAgent::SyetemState","IcAgent/SyetemState.html#method-c-subnet_canister_ranges","(agent, canister_id, subnet_id)","<p>Retrieves the canister ranges of a subnet from a canister&#39;s state.\n<p>Parameters:\n<p>agent: The IcAgent::Client …\n"],["subnet_public_key","IcAgent::SyetemState","IcAgent/SyetemState.html#method-c-subnet_public_key","(agent, canister_id, subnet_id)","<p>Retrieves the public key of a subnet from a canister&#39;s state.\n<p>Parameters:\n<p>agent: The IcAgent::Client …\n"],["time","IcAgent::SyetemState","IcAgent/SyetemState.html#method-c-time","(agent, canister_id)","<p>Retrieves the system time from a canister&#39;s state.\n<p>Parameters:\n<p>agent: The IcAgent::Client instance. …\n"],["title","IcAgent::Ast::Nodes::BaseType","IcAgent/Ast/Nodes/BaseType.html#method-i-title","()","<p>The title of the base type node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeChild","IcAgent/Ast/Nodes/BaseTypeChild.html#method-i-title","()","<p>The title of the base type child node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeContent","IcAgent/Ast/Nodes/BaseTypeContent.html#method-i-title","()","<p>The title of the base type content node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeFunc","IcAgent/Ast/Nodes/BaseTypeFunc.html#method-i-title","()","<p>The title of the function base type node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeKey","IcAgent/Ast/Nodes/BaseTypeKey.html#method-i-title","()","<p>The title of the key base type node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeOpt","IcAgent/Ast/Nodes/BaseTypeOpt.html#method-i-title","()","<p>The title of the optional base type node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeOther","IcAgent/Ast/Nodes/BaseTypeOther.html#method-i-title","()","<p>The title of the other base type node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeRecord","IcAgent/Ast/Nodes/BaseTypeRecord.html#method-i-title","()","<p>The title of the record base type node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeSingle","IcAgent/Ast/Nodes/BaseTypeSingle.html#method-i-title","()","<p>The title of the single base type node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeVariant","IcAgent/Ast/Nodes/BaseTypeVariant.html#method-i-title","()","<p>The title of the variant base type node.\n"],["title","IcAgent::Ast::Nodes::BaseTypeVec","IcAgent/Ast/Nodes/BaseTypeVec.html#method-i-title","()","<p>The title of the vector base type node.\n"],["title","IcAgent::Ast::Nodes::Comment","IcAgent/Ast/Nodes/Comment.html#method-i-title","()","<p>The title of the comment node.\n"],["title","IcAgent::Ast::Nodes::DIDFile","IcAgent/Ast/Nodes/DIDFile.html#method-i-title","()","<p>The title of the DID file node.\n"],["title","IcAgent::Ast::Nodes::IcBaseType","IcAgent/Ast/Nodes/IcBaseType.html#method-i-title","()","<p>The title of the IC base type node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeChild","IcAgent/Ast/Nodes/IcBaseTypeChild.html#method-i-title","()","<p>The title of the IC base type child node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeContent","IcAgent/Ast/Nodes/IcBaseTypeContent.html#method-i-title","()","<p>The title of the IC base type content node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeFunc","IcAgent/Ast/Nodes/IcBaseTypeFunc.html#method-i-title","()","<p>The title of the IC base type function node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeKey","IcAgent/Ast/Nodes/IcBaseTypeKey.html#method-i-title","()","<p>The title of the IC base type key node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeOpt","IcAgent/Ast/Nodes/IcBaseTypeOpt.html#method-i-title","()","<p>The title of the IC base type optional node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeOther","IcAgent/Ast/Nodes/IcBaseTypeOther.html#method-i-title","()","<p>The title of the IC base type other node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeRecord","IcAgent/Ast/Nodes/IcBaseTypeRecord.html#method-i-title","()","<p>The title of the IC base type record node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeSingle","IcAgent/Ast/Nodes/IcBaseTypeSingle.html#method-i-title","()","<p>The title of the IC base type single node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeValue","IcAgent/Ast/Nodes/IcBaseTypeValue.html#method-i-title","()","<p>The title of the IC base type value node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeVariant","IcAgent/Ast/Nodes/IcBaseTypeVariant.html#method-i-title","()","<p>The title of the IC base type variant node.\n"],["title","IcAgent::Ast::Nodes::IcBaseTypeVec","IcAgent/Ast/Nodes/IcBaseTypeVec.html#method-i-title","()","<p>The title of the IC base type vector node.\n"],["title","IcAgent::Ast::Nodes::IcServiceItem","IcAgent/Ast/Nodes/IcServiceItem.html#method-i-title","()","<p>The title of the IC service item node.\n"],["title","IcAgent::Ast::Nodes::IcServiceMethodName","IcAgent/Ast/Nodes/IcServiceMethodName.html#method-i-title","()","<p>The title of the IC service method name node.\n"],["title","IcAgent::Ast::Nodes::IcServiceMethodParams","IcAgent/Ast/Nodes/IcServiceMethodParams.html#method-i-title","()","<p>The title of the IC service method params node.\n"],["title","IcAgent::Ast::Nodes::IcServiceMethodQuery","IcAgent/Ast/Nodes/IcServiceMethodQuery.html#method-i-title","()","<p>The title of the IC service method query node.\n"],["title","IcAgent::Ast::Nodes::IcServiceMethodReturn","IcAgent/Ast/Nodes/IcServiceMethodReturn.html#method-i-title","()","<p>The title of the IC service method return node.\n"],["title","IcAgent::Ast::Nodes::IcServiceMethods","IcAgent/Ast/Nodes/IcServiceMethods.html#method-i-title","()","<p>The title of the IC service methods node.\n"],["title","IcAgent::Ast::Nodes::IcServiceName","IcAgent/Ast/Nodes/IcServiceName.html#method-i-title","()","<p>The title of the IC service name node.\n"],["title","IcAgent::Ast::Nodes::IcServiceParam","IcAgent/Ast/Nodes/IcServiceParam.html#method-i-title","()","<p>The title of the IC service param node.\n"],["title","IcAgent::Ast::Nodes::IcTypeDef","IcAgent/Ast/Nodes/IcTypeDef.html#method-i-title","()","<p>The title of the IC type definition node.\n"],["title","IcAgent::Ast::Nodes::IcTypeName","IcAgent/Ast/Nodes/IcTypeName.html#method-i-title","()","<p>The title of the IC type name node.\n"],["title","IcAgent::Ast::Nodes::Instruction","IcAgent/Ast/Nodes/Instruction.html#method-i-title","()","<p>The title of the instruction node.\n"],["title","IcAgent::Ast::Nodes::NamedNode","IcAgent/Ast/Nodes/NamedNode.html#method-i-title","()","<p>The title of the named node.\n"],["title","IcAgent::Ast::Nodes::Service","IcAgent/Ast/Nodes/Service.html#method-i-title","()","<p>The title of the IC service node.\n"],["title","IcAgent::Ast::Nodes::StatementBlock","IcAgent/Ast/Nodes/StatementBlock.html#method-i-title","()","<p>The title of the statement block node.\n"],["title","IcAgent::Ast::Nodes::StatementContent","IcAgent/Ast/Nodes/StatementContent.html#method-i-title","()","<p>The title of the statement content node.\n"],["title","IcAgent::Ast::Nodes::StatementNode","IcAgent/Ast/Nodes/StatementNode.html#method-i-title","()","<p>The title of the statement node, by default :named_node.\n"],["title","IcAgent::Ast::Nodes::TypeDeclaration","IcAgent/Ast/Nodes/TypeDeclaration.html#method-i-title","()","<p>The title of the type declaration node.\n"],["title","IcAgent::Ast::Nodes::TypeName","IcAgent/Ast/Nodes/TypeName.html#method-i-title","()","<p>The title of the type name node.\n"],["to_account_id","IcAgent::Principal","IcAgent/Principal.html#method-i-to_account_id","(sub_account = 0)","<p>Converts the Principal to an AccountIdentifier.\n<p>Parameters:\n<p>sub_account: The sub-account identifier. Defaults …\n"],["to_array","IcAgent::Ast::Nodes::NamedNode","IcAgent/Ast/Nodes/NamedNode.html#method-i-to_array","()","<p>Converts the node and its children to an array representation.\n"],["to_array","IcAgent::Ast::Nodes::StatementNode","IcAgent/Ast/Nodes/StatementNode.html#method-i-to_array","()","<p>Converts the statement node and its children to an array representation.\n"],["to_array","IcAgent::Ast::Nodes::StringLiteral","IcAgent/Ast/Nodes/StringLiteral.html#method-i-to_array","()","<p>Converts the string literal node to an array representation. In this case, the array contains the text …\n"],["to_obj","IcAgent::Ast::Nodes::IcServiceItem","IcAgent/Ast/Nodes/IcServiceItem.html#method-i-to_obj","()","<p>Converts the IC service item node to a hash representation.\n"],["to_obj","IcAgent::Ast::Nodes::TypeDeclaration","IcAgent/Ast/Nodes/TypeDeclaration.html#method-i-to_obj","()","<p>Converts the type declaration node to a hash representation.\n"],["to_pem","IcAgent::Identity","IcAgent/Identity.html#method-i-to_pem","()","<p>Returns the PEM-encoded private key of the Identity.\n<p>Returns: The PEM-encoded private key.\n"],["to_request_id","IcAgent::Utils","IcAgent/Utils.html#method-c-to_request_id","(d)","<p>Converts a data structure into a request ID.\n<p>Parameters:\n<p>d: The data structure to convert.\n"],["to_s","IcAgent::AccountIdentifier","IcAgent/AccountIdentifier.html#method-i-to_s","()",""],["to_s","IcAgent::Ast::Nodes::BaseType","IcAgent/Ast/Nodes/BaseType.html#method-i-to_s","()","<p>Converts the base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeChild","IcAgent/Ast/Nodes/BaseTypeChild.html#method-i-to_s","()","<p>Converts the base type child node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeContent","IcAgent/Ast/Nodes/BaseTypeContent.html#method-i-to_s","()","<p>Converts the base type content node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeFunc","IcAgent/Ast/Nodes/BaseTypeFunc.html#method-i-to_s","()","<p>Converts the function base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeKey","IcAgent/Ast/Nodes/BaseTypeKey.html#method-i-to_s","()","<p>Converts the key base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeOpt","IcAgent/Ast/Nodes/BaseTypeOpt.html#method-i-to_s","()","<p>Converts the optional base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeOther","IcAgent/Ast/Nodes/BaseTypeOther.html#method-i-to_s","()","<p>Converts the other base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeRecord","IcAgent/Ast/Nodes/BaseTypeRecord.html#method-i-to_s","()","<p>Converts the record base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeSingle","IcAgent/Ast/Nodes/BaseTypeSingle.html#method-i-to_s","()","<p>Converts the single base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeVariant","IcAgent/Ast/Nodes/BaseTypeVariant.html#method-i-to_s","()","<p>Converts the variant base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::BaseTypeVec","IcAgent/Ast/Nodes/BaseTypeVec.html#method-i-to_s","()","<p>Converts the vector base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::Comment","IcAgent/Ast/Nodes/Comment.html#method-i-to_s","()","<p>Converts the comment node to a string representation with &#39;#&#39; prefix.\n"],["to_s","IcAgent::Ast::Nodes::DIDFile","IcAgent/Ast/Nodes/DIDFile.html#method-i-to_s","()","<p>Converts the DID file node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseType","IcAgent/Ast/Nodes/IcBaseType.html#method-i-to_s","()","<p>Converts the IC base type node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeChild","IcAgent/Ast/Nodes/IcBaseTypeChild.html#method-i-to_s","()","<p>Converts the IC base type child node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeContent","IcAgent/Ast/Nodes/IcBaseTypeContent.html#method-i-to_s","()","<p>Converts the IC base type content node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeFunc","IcAgent/Ast/Nodes/IcBaseTypeFunc.html#method-i-to_s","()","<p>Converts the IC base type function node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeKey","IcAgent/Ast/Nodes/IcBaseTypeKey.html#method-i-to_s","()","<p>Converts the IC base type key node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeOpt","IcAgent/Ast/Nodes/IcBaseTypeOpt.html#method-i-to_s","()","<p>Converts the IC base type optional node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeOther","IcAgent/Ast/Nodes/IcBaseTypeOther.html#method-i-to_s","()","<p>Converts the IC base type other node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeRecord","IcAgent/Ast/Nodes/IcBaseTypeRecord.html#method-i-to_s","()","<p>Converts the IC base type record node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeSingle","IcAgent/Ast/Nodes/IcBaseTypeSingle.html#method-i-to_s","()","<p>Converts the IC base type single node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeValue","IcAgent/Ast/Nodes/IcBaseTypeValue.html#method-i-to_s","()","<p>Converts the IC base type value node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeVariant","IcAgent/Ast/Nodes/IcBaseTypeVariant.html#method-i-to_s","()","<p>Converts the IC base type variant node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcBaseTypeVec","IcAgent/Ast/Nodes/IcBaseTypeVec.html#method-i-to_s","()","<p>Converts the IC base type vector node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcServiceItem","IcAgent/Ast/Nodes/IcServiceItem.html#method-i-to_s","()","<p>Converts the IC service item node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcServiceMethodParams","IcAgent/Ast/Nodes/IcServiceMethodParams.html#method-i-to_s","()","<p>Converts the IC service method params node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcServiceMethodQuery","IcAgent/Ast/Nodes/IcServiceMethodQuery.html#method-i-to_s","()","<p>Converts the IC service method query node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcServiceMethodReturn","IcAgent/Ast/Nodes/IcServiceMethodReturn.html#method-i-to_s","()","<p>Converts the IC service method return node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcServiceName","IcAgent/Ast/Nodes/IcServiceName.html#method-i-to_s","()","<p>Converts the IC service name node to a string representation with &#39;#&#39; prefix.\n"],["to_s","IcAgent::Ast::Nodes::IcServiceParam","IcAgent/Ast/Nodes/IcServiceParam.html#method-i-to_s","()","<p>Converts the IC service param node to a string representation with &#39;#&#39; prefix.\n"],["to_s","IcAgent::Ast::Nodes::IcTypeDef","IcAgent/Ast/Nodes/IcTypeDef.html#method-i-to_s","()","<p>Converts the IC type definition node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::IcTypeName","IcAgent/Ast/Nodes/IcTypeName.html#method-i-to_s","()","<p>Converts the IC type name node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::Instruction","IcAgent/Ast/Nodes/Instruction.html#method-i-to_s","()","<p>Converts the instruction node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::NamedNode","IcAgent/Ast/Nodes/NamedNode.html#method-i-to_s","()","<p>Converts the node and its children to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::Service","IcAgent/Ast/Nodes/Service.html#method-i-to_s","()","<p>Converts the IC service node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::StatementBlock","IcAgent/Ast/Nodes/StatementBlock.html#method-i-to_s","()","<p>Converts the statement block node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::StatementContent","IcAgent/Ast/Nodes/StatementContent.html#method-i-to_s","()","<p>Converts the statement content node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::StatementNode","IcAgent/Ast/Nodes/StatementNode.html#method-i-to_s","()","<p>Converts the statement node and its children to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::StringLiteral","IcAgent/Ast/Nodes/StringLiteral.html#method-i-to_s","()","<p>Converts the string literal node to a string representation. In this case, it returns the text value …\n"],["to_s","IcAgent::Ast::Nodes::TypeDeclaration","IcAgent/Ast/Nodes/TypeDeclaration.html#method-i-to_s","()","<p>Converts the type declaration node to a string representation.\n"],["to_s","IcAgent::Ast::Nodes::TypeName","IcAgent/Ast/Nodes/TypeName.html#method-i-to_s","()","<p>Converts the type name node to a string representation.\n"],["to_s","IcAgent::DelegateIdentity","IcAgent/DelegateIdentity.html#method-i-to_s","()",""],["to_s","IcAgent::Identity","IcAgent/Identity.html#method-i-to_s","()",""],["to_s","IcAgent::Principal","IcAgent/Principal.html#method-i-to_s","()",""],["to_str","IcAgent::AccountIdentifier","IcAgent/AccountIdentifier.html#method-i-to_str","()","<p>Converts the AccountIdentifier to a string representation.\n<p>Returns: The string representation of the  …\n"],["to_str","IcAgent::Principal","IcAgent/Principal.html#method-i-to_str","()","<p>Converts the Principal to a string representation.\n<p>Returns: The string representation of the Principal …\n"],["tree","IcAgent::Certificate","IcAgent/Certificate.html#method-c-tree","(cert)","<p>Retrieves the tree from a certificate.\n<p>Parameters:\n<p>cert: The certificate object.\n"],["try_as_tuple","IcAgent::Candid::RecordClass","IcAgent/Candid/RecordClass.html#method-i-try_as_tuple","()",""],["tuple","IcAgent::Candid::BaseTypes","IcAgent/Candid/BaseTypes.html#method-c-tuple","(*types)",""],["type_child_item_keys","IcAgent::Ast::Nodes::TypeDeclaration","IcAgent/Ast/Nodes/TypeDeclaration.html#method-i-type_child_item_keys","()","<p>Returns an array of keys of type child items.\n"],["type_child_items","IcAgent::Ast::Nodes::TypeDeclaration","IcAgent/Ast/Nodes/TypeDeclaration.html#method-i-type_child_items","()","<p>Returns an array of type child items.\n"],["type_param_content","IcAgent::Ast::Nodes::TypeDeclaration","IcAgent/Ast/Nodes/TypeDeclaration.html#method-i-type_param_content","()","<p>Returns the content of the type parameter without newlines and trailing &#39;;}&#39; replaced with &#39;}&#39;. …\n"],["type_param_name","IcAgent::Ast::Nodes::TypeDeclaration","IcAgent/Ast/Nodes/TypeDeclaration.html#method-i-type_param_name","()","<p>Returns the name of the type parameter.\n"],["type_refer_items","IcAgent::Ast::Nodes::TypeDeclaration","IcAgent/Ast/Nodes/TypeDeclaration.html#method-i-type_refer_items","()","<p>Returns an array of referenced types in the type parameter content.\n"],["type_root_opt_code","IcAgent::Ast::Nodes::TypeDeclaration","IcAgent/Ast/Nodes/TypeDeclaration.html#method-i-type_root_opt_code","()","<p>Returns the opt code of the root type element.\n"],["unicode_to_hex","IcAgent::Candid","IcAgent/Candid.html#method-c-unicode_to_hex","(u_code)",""],["update_raw","IcAgent::Agent","IcAgent/Agent.html#method-i-update_raw","(canister_id, method_name, arg, return_type = nil, effective_canister_id = nil, **kwargs)","<p>Sends a raw update request to a canister and handles the response.\n<p>@param canister_id [String] The ID …\n"],["value","IcAgent::Ast::Nodes::IcServiceMethods","IcAgent/Ast/Nodes/IcServiceMethods.html#method-i-value","()","<p>Returns an array of IC service method nodes.\n"],["variant","IcAgent::Candid::BaseTypes","IcAgent/Candid/BaseTypes.html#method-c-variant","(fields)",""],["vec","IcAgent::Candid::BaseTypes","IcAgent/Candid/BaseTypes.html#method-c-vec","(t)",""],["verify","IcAgent::Agent","IcAgent/Agent.html#method-i-verify","(cert, canister_id)","<p>Verify a BLS signature The signature must be exactly 48 bytes (compressed G1 element) The key must be …\n"],["verify","IcAgent::Identity","IcAgent/Identity.html#method-i-verify","(msg, sig)","<p>Verifies a message signature using the Identity.\n<p>Parameters:\n<p>msg: The message to verify.\n"],["write","IcAgent::Ast::Writer","IcAgent/Ast/Writer.html#method-i-write","(return_type = :string)","<p>Writes the AST in the desired format.\n<p>Parameters:\n<p>return_type: The desired format to represent the AST …\n"],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>We as members, contributors, and leaders pledge to make …\n"],["Dockerfile","","Dockerfile.html","","<p>FROM ruby:2.7.8-alpine3.16\n<p>ENV BUILD_PACKAGES curl-dev build-base automake autoconf libtool libffi-dev …\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source &#39;rubygems.org&#39;\n<p># Specify your gem&#39;s dependencies in ic_agent.gemspec …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  ic_agent (0.2.0)\n    base32 (~&gt; 0.3.4)\n    bitcoin-ruby (~&gt; 0.0.20)\n    bls12-381 ...</pre>\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2023 Terry.Tu\n<p>Permission is hereby granted, free of charge, to any …\n"],["README","","README_md.html","","<p>IcAgent\n<p>Ruby Agent Library for the Internet Computer\n<p><code>ic_agent</code> provides basic modules to interact with canisters …\n"],["Rakefile","","Rakefile.html","","<p># frozen_string_literal: true\n<p>require “bundler/gem_tasks” task default: %i[]\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["did_grammar.treetop","","lib/ic_agent/ast/did_grammar_treetop.html","","<p>grammar DIDGrammar\n\n<pre>rule body\n  ( type_declaration / service_declaration / comment / end_of_line )* &lt;IcAgent::Ast::Nodes::DIDFile&gt; ...</pre>\n"],["did_grammar_v1.treetop","","lib/ic_agent/ast/did_grammar_v1_treetop.html","","<p>grammar DIDGrammar\n\n<pre>rule body\n  ( type_declaration / service_declaration / comment / end_of_line )* &lt;IcAgent::Ast::Nodes::DIDFile&gt; ...</pre>\n"],["did_grammar_v2.treetop","","lib/ic_agent/ast/did_grammar_v2_treetop.html","","<p>grammar DIDGrammar\n\n<pre>rule body\n  ( type_declaration / service_declaration / comment / end_of_line )* &lt;IcAgent::Ast::Nodes::DIDFile&gt; ...</pre>\n"],["nested_type_grammar.treetop","","lib/ic_agent/ast/nested_type_grammar_treetop.html","","<p>grammar TypeGrammar\n\n<pre>rule statement_block\n  ic_all_type optional_semicolon &lt;IcAgent::Ast::Nodes::StatementBlock&gt; ...</pre>\n"],["record_parser.treetop","","lib/ic_agent/ast/record_parser_treetop.html","","<p>grammar RecordParser\n\n<pre># record { key1: text; key2: 42; value1; value2; }\nrule record\n  &#39;record&#39; space &#39;{&#39; ...</pre>\n"],["variant_parser.treetop","","lib/ic_agent/ast/variant_parser_treetop.html","","<p>grammar VariantParser\n\n<pre>rule variant\n  &#39;variant&#39; space? &#39;{&#39; space? (pair / key)* space? &#39;}&#39; &lt;IcAgent::Ast::Nodes::IcBaseTypeVariant&gt; ...</pre>\n"],["ic_agent.rbs","","sig/ic_agent_rbs.html","","<p>module IcAgent\n\n<pre>VERSION: String\n# See the writing guide of rbs: https://github.com/ruby/rbs#guides</pre>\n<p>end\n"]]}}